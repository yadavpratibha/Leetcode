/**
 * Problem: 138. Copy List with Random Pointer
 * Source: https://leetcode.com/problems/copy-list-with-random-pointer/description/
 */

/*
// Definition for a Node.
class Node {
    int val;
    Node next;
    Node random;

    public Node(int val) {
        this.val = val;
        this.next = null;
        this.random = null;
    }
}
*/

class Solution {
    public Node copyRandomList(Node head) {
        HashMap<Node,Node>map=new HashMap<>();

        Node temp=head;
        while(temp!=null){
            Node nn=new Node(temp.val);
            map.put(temp,nn);
            temp=temp.next;
        }

        temp=head;
        while(temp!=null){
            Node copy=map.get(temp);
            copy.next=map.get(temp.next);
            copy.random=map.get(temp.random);
            temp=temp.next;
        }
        return map.get(head);
    }
}
