/**
 * Problem: 82. Remove Duplicates from Sorted List II
 * Source: https://leetcode.com/problems/remove-duplicates-from-sorted-list-ii/description/
 */

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode deleteDuplicates(ListNode head) {
        if(head==null || head.next==null){
            return head;
        }
        ListNode dummy=new ListNode(0,head);
        ListNode prev=dummy;
        ListNode temp=head;
        while(temp!=null){
            if(temp.next!=null && temp.val==temp.next.val){
                while(temp.next!=null && temp.val==temp.next.val){
                    temp=temp.next;
                }
                prev.next=temp.next;
            }else{
                prev=prev.next;
            }
            temp=temp.next;
        }
        return dummy.next;
    }
}
