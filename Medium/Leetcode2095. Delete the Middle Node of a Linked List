/**
 * Problem: 2095. Delete the Middle Node of a Linked List
 * Source: https://leetcode.com/problems/delete-the-middle-node-of-a-linked-list/description/
 */

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode deleteMiddle(ListNode head) {
        if(head==null || head.next==null){
            return null;
        }
        ListNode prev=FindMiddle_1th(head);
        prev.next=prev.next.next;
        return head;
    }

    public ListNode FindMiddle_1th(ListNode head) {
        ListNode prev = null;
        ListNode Slow = head;
        ListNode Fast = head;
        while (Fast != null && Fast.next != null) {
            prev = Slow;
            Slow = Slow.next;
            Fast = Fast.next.next;
        }
        return prev;
    }

}
