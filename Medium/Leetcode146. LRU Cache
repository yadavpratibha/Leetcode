/**
 * Problem: 146. LRU Cache
 * Source: https://leetcode.com/problems/lru-cache/description/
 */



-----------------------------OR--------------------------------

//Using built-in LinkedHashMAp

class LRUCache {
    private LinkedHashMap<Integer,Integer>map;

    public LRUCache(int capacity) {
        map=new LinkedHashMap<>(capacity,0.75f,true){
            @Override
            protected boolean removeEldestEntry(Map.Entry<Integer,Integer>eldest){
                return size()>capacity;
            }
        };
    }
    
    public int get(int key) {
        return map.getOrDefault(key,-1);
    }
    
    public void put(int key, int value) {
        map.put(key,value);
    }
}

/**
 * Your LRUCache object will be instantiated and called as such:
 * LRUCache obj = new LRUCache(capacity);
 * int param_1 = obj.get(key);
 * obj.put(key,value);
 */
